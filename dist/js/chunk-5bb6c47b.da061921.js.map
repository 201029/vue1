{"version":3,"sources":["webpack:///./src/utils/reg.js","webpack:///./src/api/account.js","webpack:///./src/views/AccountManage/ModifyPassword.vue?5d17","webpack:///src/views/AccountManage/ModifyPassword.vue","webpack:///./src/views/AccountManage/ModifyPassword.vue?8738","webpack:///./src/views/AccountManage/ModifyPassword.vue","webpack:///./src/views/AccountManage/ModifyPassword.vue?cb7c"],"names":["nameReg","pwdReg","registers","params","req","post","addAccount","accountlist","get","accountDel","batchdel","accountedit","checklogin","checkOldPwd","pwdedit","getAccountInfo","editAvatarImg","render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","ref","attrs","ruleForm","rules","model","value","callback","$$v","$set","_n","expression","on","confirm","resetForm","staticRenderFns","data","Error","console","log","pwd","Original","checkpwd","methods","$refs","resetFields","validate","component"],"mappings":"kHAAA,oEAGO,IAAMA,EAAU,iBAAM,0BAGhBC,EAAS,iBAAM,iD,kCCN5B,sYAOaC,EAAY,SAAAC,GAAM,OAAIC,OAAIC,KAAK,qBAAsBF,IAGrDG,EAAa,SAAAH,GAAM,OAAIC,OAAIC,KAAK,sBAAuBF,IAGvDI,EAAc,SAAAJ,GAAM,OAAIC,OAAII,IAAI,uBAAwBL,IAGxDM,EAAa,SAAAN,GAAM,OAAIC,OAAII,IAAI,sBAAuBL,IAGtDO,EAAW,SAAAP,GAAM,OAAIC,OAAII,IAAI,2BAA4BL,IAGzDQ,EAAc,SAAAR,GAAM,OAAIC,OAAIC,KAAK,uBAAwBF,IAGzDS,EAAa,SAAAT,GAAM,OAAIC,OAAIC,KAAK,sBAAuBF,IAGvDU,EAAc,SAAAV,GAAM,OAAIC,OAAII,IAAI,uBAAwBL,IAGxDW,EAAU,SAAAX,GAAM,OAAIC,OAAIC,KAAK,wBAAyBF,IAGtDY,EAAiB,SAAAZ,GAAM,OAAIC,OAAII,IAAI,uBAAwBL,IAG3Da,EAAgB,SAAAb,GAAM,OAAIC,OAAII,IAAI,sBAAuBL,K,2CCrCtE,IAAIc,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,YAAY,kBAAkB,CAACF,EAAG,KAAK,CAACE,YAAY,SAAS,CAACN,EAAIO,GAAG,UAAUH,EAAG,MAAM,CAACE,YAAY,eAAe,CAACF,EAAG,UAAU,CAACI,IAAI,WAAWF,YAAY,gBAAgBG,MAAM,CAAC,MAAQT,EAAIU,SAAS,cAAc,GAAG,cAAc,QAAQ,MAAQV,EAAIW,QAAQ,CAACP,EAAG,eAAe,CAACK,MAAM,CAAC,MAAQ,MAAM,KAAO,aAAa,CAACL,EAAG,WAAW,CAACQ,MAAM,CAACC,MAAOb,EAAIU,SAAiB,SAAEI,SAAS,SAAUC,GAAMf,EAAIgB,KAAKhB,EAAIU,SAAU,WAAYV,EAAIiB,GAAGF,KAAOG,WAAW,wBAAwB,GAAGd,EAAG,eAAe,CAACK,MAAM,CAAC,MAAQ,MAAM,KAAO,QAAQ,CAACL,EAAG,WAAW,CAACK,MAAM,CAAC,KAAO,WAAW,aAAe,OAAOG,MAAM,CAACC,MAAOb,EAAIU,SAAY,IAAEI,SAAS,SAAUC,GAAMf,EAAIgB,KAAKhB,EAAIU,SAAU,MAAOK,IAAMG,WAAW,mBAAmB,GAAGd,EAAG,eAAe,CAACK,MAAM,CAAC,MAAQ,OAAO,KAAO,aAAa,CAACL,EAAG,WAAW,CAACK,MAAM,CAAC,KAAO,WAAW,aAAe,OAAOG,MAAM,CAACC,MAAOb,EAAIU,SAAiB,SAAEI,SAAS,SAAUC,GAAMf,EAAIgB,KAAKhB,EAAIU,SAAU,WAAYK,IAAMG,WAAW,wBAAwB,GAAGd,EAAG,eAAe,CAACA,EAAG,YAAY,CAACK,MAAM,CAAC,KAAO,WAAWU,GAAG,CAAC,MAAQnB,EAAIoB,UAAU,CAACpB,EAAIO,GAAG,QAAQH,EAAG,YAAY,CAACe,GAAG,CAAC,MAAQnB,EAAIqB,YAAY,CAACrB,EAAIO,GAAG,SAAS,IAAI,IAAI,MACrvCe,EAAkB,G,4DCwCtB,GACEC,KADF,WACA,WAEA,EAAI,WAAJ,2KAEA,2BAFA,gBAEA,EAFA,EAEA,OAFA,EAEA,IAEA,OACA,sBAEA,QACA,iBAGA,qBACA,sCAEA,KAdA,kGAAI,GAkBJ,kBAGoB,KAAVV,EACFC,EAAS,IAAIU,MAAM,WAC3B,wBACQV,EAAS,IAAIU,MAAM,cAE3B,mBAIA,KAAY,EAAZ,mBACU,EAAV,yCAEQV,KANAA,EAAS,IAAIU,MAAM,2BAU3B,kBACMC,QAAQC,IAAI,EAAlB,cACM,IAAIC,EAAM,EAAhB,aACMF,QAAQC,IAAIC,GACE,KAAVd,EACFC,EAAS,IAAIU,MAAM,WAC3B,MACQV,EAAS,IAAIU,MAAM,eAEnBV,KAGJ,MAAO,CAELJ,SAAU,CACRkB,SAAU,GACVD,IAAK,GACLE,SAAU,IAGZlB,MAAO,CAELiB,SAAU,CAClB,CACU,UAAV,EACU,UAAV,EACU,QAAV,SAIQD,IAAK,CACb,CACU,UAAV,EACU,UAAV,EACU,QAAV,iBACU,QAAV,SAIQE,SAAU,CAClB,CACU,UAAV,EACU,UAAV,EACU,QAAV,YAOEC,QAAS,CAEPT,UAFJ,WAGMpB,KAAK8B,MAAMrB,SAASsB,eAGtBZ,QANJ,WAMA,WACMnB,KAAK8B,MAAMrB,SAASuB,SAApB,WAAN,wJACA,gBACA,EAFA,uBAGA,uBACA,wBAJA,SAKA,wCALA,gBAKA,EALA,EAKA,KACA,QAEA,uBAEA,0BAVA,8FAAM,OC1IiW,I,wBCQnWC,EAAY,eACd,EACAnC,EACAuB,GACA,EACA,KACA,WACA,MAIa,aAAAY,E,kECnBf,yBAAokB,EAAG","file":"js/chunk-5bb6c47b.da061921.js","sourcesContent":["/* 工具函数  */\r\n\r\n//账号的正则验证  中文 长度 2 ~ 5 位\r\nexport const nameReg = () => /^[\\u4e00-\\u9fa5]{2,5}$/\r\n\r\n//密码的正则验证  //密码包含数字和英文，长度 3 ~ 12 位 \r\nexport const pwdReg = () => /^(?![0-9]+$)(?![a-zA-Z]+$)[0-9A-Za-z]{3,12}$/","/**\r\n * 账号管理接口\r\n */\r\n\r\nimport req from '@/utils/request' //引入封装的axios\r\n\r\n//验证账号是否重复\r\nexport const registers = params => req.post('/account/registers', params)\r\n\r\n// 添加账号\r\nexport const addAccount = params => req.post('/account/accountadd', params)\r\n\r\n// 渲染列表(分页)\r\nexport const accountlist = params => req.get('/account/accountlist', params)\r\n\r\n// 单个删除\r\nexport const accountDel = params => req.get('/account/accountdel', params)\r\n\r\n//多个删除\r\nexport const batchdel = params => req.get('/account/accountbatchdel', params)\r\n\r\n//编辑\r\nexport const accountedit = params => req.post('/account/accountedit', params)\r\n\r\n//登录\r\nexport const checklogin = params => req.post('/account/checklogin', params)\r\n\r\n//原密码验证是否存在 验证旧密码\r\nexport const checkOldPwd = params => req.get('/account/checkoldpwd', params)\r\n\r\n//修改密码\r\nexport const pwdedit = params => req.post('/account/passwordedit', params)\r\n\r\n// 获取账号信息\r\nexport const getAccountInfo = params => req.get('/account/accountinfo', params)\r\n\r\n// 修改头像\r\nexport const editAvatarImg = params => req.get('/account/avataredit', params)\r\n\r\n \r\n \r\n\r\n\r\n\r\n\r\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"modifypassword\"},[_c('h1',{staticClass:\"tatle\"},[_vm._v(\"修改密码\")]),_c('div',{staticClass:\"box-content\"},[_c('el-form',{ref:\"ruleForm\",staticClass:\"demo-ruleForm\",attrs:{\"model\":_vm.ruleForm,\"status-icon\":\"\",\"label-width\":\"100px\",\"rules\":_vm.rules}},[_c('el-form-item',{attrs:{\"label\":\"原密码\",\"prop\":\"Original\"}},[_c('el-input',{model:{value:(_vm.ruleForm.Original),callback:function ($$v) {_vm.$set(_vm.ruleForm, \"Original\", _vm._n($$v))},expression:\"ruleForm.Original\"}})],1),_c('el-form-item',{attrs:{\"label\":\"新密码\",\"prop\":\"pwd\"}},[_c('el-input',{attrs:{\"type\":\"password\",\"autocomplete\":\"off\"},model:{value:(_vm.ruleForm.pwd),callback:function ($$v) {_vm.$set(_vm.ruleForm, \"pwd\", $$v)},expression:\"ruleForm.pwd\"}})],1),_c('el-form-item',{attrs:{\"label\":\"确认密码\",\"prop\":\"checkpwd\"}},[_c('el-input',{attrs:{\"type\":\"password\",\"autocomplete\":\"off\"},model:{value:(_vm.ruleForm.checkpwd),callback:function ($$v) {_vm.$set(_vm.ruleForm, \"checkpwd\", $$v)},expression:\"ruleForm.checkpwd\"}})],1),_c('el-form-item',[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.confirm}},[_vm._v(\"确认\")]),_c('el-button',{on:{\"click\":_vm.resetForm}},[_vm._v(\"重置\")])],1)],1)],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"modifypassword\">\r\n    <h1 class=\"tatle\">修改密码</h1>\r\n    <div class=\"box-content\">\r\n      <el-form\r\n        :model=\"ruleForm\"\r\n        status-icon\r\n        ref=\"ruleForm\"\r\n        label-width=\"100px\"\r\n        class=\"demo-ruleForm\"\r\n        :rules=\"rules\"\r\n      >\r\n        <el-form-item label=\"原密码\" prop=\"Original\">\r\n          <el-input v-model.number=\"ruleForm.Original\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"新密码\" prop=\"pwd\">\r\n          <el-input type=\"password\" v-model=\"ruleForm.pwd\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"确认密码\" prop=\"checkpwd\">\r\n          <el-input type=\"password\" v-model=\"ruleForm.checkpwd\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"confirm\">确认</el-button>\r\n          <el-button @click=\"resetForm\">重置</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n/* 引入调用接口的函数 */\r\nimport { checkOldPwd, pwdedit } from \"@/api/account\";\r\n\r\n// 引入工具函数\r\nimport { pwdReg } from \"@/utils/reg\";\r\n\r\n/* 本地存储 */\r\nimport local from \"@/utils/local\";\r\n\r\nexport default {\r\n  data() {\r\n    /* 原密码的验证 */\r\n    const verifyOriginalpwd = async (rule, value, callback) => {\r\n      //调用接口函数  然后获取参\r\n      let { code, msg } = await checkOldPwd({ oldPwd: value });\r\n\r\n      if (value === \"\") {\r\n        callback(new Error(\"请输入密码\"));\r\n        //接口 判断 参数 要加上''\r\n      } else if (code == \"11\") {\r\n        callback(new Error(msg));\r\n      } else {\r\n        // 如果确认新密码不为空\r\n        if (this.ruleForm.pwd !== \"\") {\r\n          this.$refs.ruleForm.validateField(\"pwd\"); // 再次触发他的验证\r\n        }\r\n        callback();\r\n      }\r\n    };\r\n    /* 密码验证 */\r\n    const validatepwd = (rule, value, callback) => {\r\n      // rule: 验证规则对象  value: 用户输入的值， callback: 回调函数\r\n      //非空\r\n      if (value === \"\") {\r\n        callback(new Error(\"密码不能为空\"));\r\n      } else if (value === this.ruleForm.Original) {\r\n        callback(new Error(\"密码不和原密码相同\"));\r\n        //正则验证\r\n      } else if (!rule.pattern.test(value)) {\r\n        callback(new Error(\"密码包含数字和英文，长度 3 ~ 12 位\"));\r\n      } else {\r\n        // 如果确认再次验证密码新密码不为空\r\n        if (this.ruleForm.checkpwd !== \"\") {\r\n          this.$refs.ruleForm.validateField(\"checkpwd\"); // 再次触发他的验证\r\n        }\r\n        callback();\r\n      }\r\n    };\r\n    /* 密码的二次验证 */\r\n    const validateCheckpwd = (rule, value, callback) => {\r\n      console.log(this.ruleForm.pwd);\r\n      var pwd = this.ruleForm.pwd; //获取到新输入的密码 然后验证 是否和这个输入的密码一样\r\n      console.log(pwd);\r\n      if (value === \"\") {\r\n        callback(new Error(\"密码不能为空\"));\r\n      } else if (value !== pwd) {\r\n        callback(new Error(\"两次输入的密码不一致\"));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    return {\r\n      //表单内容\r\n      ruleForm: {\r\n        Original: \"\", //原密码\r\n        pwd: \"\", //新的密码\r\n        checkpwd: \"\" //再次验证密码\r\n      },\r\n      //表单验证\r\n      rules: {\r\n        //验证原密码\r\n        Original: [\r\n          {\r\n            required: true,\r\n            validator: verifyOriginalpwd,\r\n            trigger: \"blur\" //  触发验证的方式\r\n          }\r\n        ],\r\n        //..验证新的密码\r\n        pwd: [\r\n          {\r\n            required: true,\r\n            validator: validatepwd,\r\n            pattern: pwdReg(), // 验证规则\r\n            trigger: \"blur\" //  触发验证的方式\r\n          }\r\n        ],\r\n        //再次验证密码\r\n        checkpwd: [\r\n          {\r\n            required: true,\r\n            validator: validateCheckpwd,\r\n            trigger: \"blur\" //  触发验证的方式\r\n          }\r\n        ]\r\n      }\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    /* 重置 */\r\n    resetForm() {\r\n      this.$refs.ruleForm.resetFields();\r\n    },\r\n    //确认\r\n    confirm() {\r\n      this.$refs.ruleForm.validate(async valid => {\r\n        console.log(valid);\r\n        if (valid) {\r\n          console.log(\"全端的验证通过\");\r\n          console.log(this.ruleForm);\r\n          let { code } = await pwdedit({ newPwd: this.ruleForm.pwd });\r\n          if (code === 0) {\r\n            // 清除token\r\n            local.remove(\"token\");\r\n            //跳转到登录页面\r\n            this.$router.push(\"/login\");\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.modifypassword {\r\n  width: 100%;\r\n  height: auto;\r\n  background: #fff;\r\n  box-shadow: 0 0 10px 2px #ccc;\r\n  padding-top: 30px;\r\n\r\n  .tatle {\r\n    font-size: 18px;\r\n    margin: 0 0 0 40px;\r\n  }\r\n  .box-content {\r\n    width: 100%;\r\n    height: 400px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    .el-form {\r\n      width: 400px;\r\n    }\r\n  }\r\n}\r\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ModifyPassword.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ModifyPassword.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ModifyPassword.vue?vue&type=template&id=ea7d3628&scoped=true&\"\nimport script from \"./ModifyPassword.vue?vue&type=script&lang=js&\"\nexport * from \"./ModifyPassword.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ModifyPassword.vue?vue&type=style&index=0&id=ea7d3628&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"ea7d3628\",\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ModifyPassword.vue?vue&type=style&index=0&id=ea7d3628&lang=less&scoped=true&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ModifyPassword.vue?vue&type=style&index=0&id=ea7d3628&lang=less&scoped=true&\""],"sourceRoot":""}